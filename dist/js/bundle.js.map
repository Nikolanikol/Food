{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;;AAEA;;AAEA;AACA,mCAAmC;AACnC;AACA,EAAE;AACF,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,KAAK;AACxC;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kDAAkD,gBAAgB;AAClE;AACA;AACA;AACA,gFAAgF;AAChF;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;;AAEA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,cAAc;AACd;AACA;;AAEA,2DAA2D;AAC3D;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;AAGA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;;AC/HgC;;AAEnD;AACA;AACA;AACA;;AAEA;AACA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,uDAAuD;AACvD;AACA;AACA;AACA,2CAA2C,gBAAgB,MAAM,SAAS;AAC1E,kEAAkE,WAAW;AAC7E,gEAAgE,iBAAiB;AACjF;AACA;AACA;AACA,0EAA0E,WAAW;AACrF;AACA;AACA;AACA,mCAAmC;AACnC;AACA;;AAEA,IAAI,+DAAW;AACf;AACA,uBAAuB;AACvB,4BAA4B,kCAAkC,OAAO;AACrE;AACA,aAAa;AACb,SAAS;AACT;;AAEA,iEAAe,KAAK;;;;;;;;;;;;;;;;AC3C6B;AACD;;AAEhD;AACA;AACA,4DAA4D;;AAE5D;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA,4DAA4D,eAAe;AAC3E;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA,aAAa,4DAAQ;AACrB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,QAAQ;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mDAAU;AAC3B,cAAc;;AAEd;AACA;AACA;AACA;AACA,oBAAoB,mDAAU;AAC9B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;AClGpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,MAAM,EAAC;AACF;;;;;;;;;;;;;;;ACnDpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;;AAE9D,yDAAyD;AACzD;AACA;;AAEA,6CAA6C;AAC7C;AACA,oCAAoC;AACpC,KAAK;;AAEL,8BAA8B,WAAW,GAAG;AAC5C;AACA,gCAAgC,cAAc;AAC9C,MAAM;AACN;AACA;;AAEA,8BAA8B;AAC9B;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,oCAAoC,WAAW;AAC/C,UAAU;AACV;AACA;AACA;AACA,2CAA2C;AAC3C,wEAAwE;AACxE;AACA,UAAU;AACV,iDAAiD;AACjD;AACA,qDAAqD,OAAO,KAAK;AACjE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA,KAAK;;AAEL,iCAAiC,WAAW;AAC5C;AACA,mCAAmC,cAAc;AACjD,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA,0CAA0C,WAAW;AACrD,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;;AAER;AACA,iCAAiC,cAAc;AAC/C,QAAQ;AACR;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,uCAAuC,WAAW;AAClD,YAAY;AACZ;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;;;AAGR;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,OAAO;AACpE;AACA;AACA,4CAA4C,WAAW;AACvD,kBAAkB;AAClB;;AAEA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA,iEAAe,OAAO;;;;;;;;;;;;;;;;ACtMtB;AACA;AACA;AACA;AACA,uCAAuC,cAAc;AACrD,mCAAmC,WAAW;AAC9C,wCAAwC,eAAe;AACvD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA,iEAAe,IAAI;;;;;;;;;;;;;;AC3CnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;AChDpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,2CAA2C,IAAI,WAAW,gBAAgB;AAC1E;AACA;AACA;;AAEkB;;;;;;;UCnBlB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNkC;AACE;AACA;AACE;AACE;AACN;AACE;AACS;;AAE7C;AACA;AACA;AACA,wCAAwC,0DAAS;AACjD,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,2DAAM;AACV,IAAI,4DAAO;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,CAAC","sources":["webpack://food_dist/./js/modules/calc.js","webpack://food_dist/./js/modules/cards.js","webpack://food_dist/./js/modules/forms.js","webpack://food_dist/./js/modules/modals.js","webpack://food_dist/./js/modules/sliders.js","webpack://food_dist/./js/modules/tabs.js","webpack://food_dist/./js/modules/timer.js","webpack://food_dist/./js/services/services.js","webpack://food_dist/webpack/bootstrap","webpack://food_dist/webpack/runtime/define property getters","webpack://food_dist/webpack/runtime/hasOwnProperty shorthand","webpack://food_dist/webpack/runtime/make namespace object","webpack://food_dist/./js/main.js"],"sourcesContent":["function calc(){\n    // калькулятор\n\nlet height, weight, age, sex, ratio;\n\n// работа с localStorage дя сохранения состояния введенных данных\nif (localStorage.getItem('sex')) { //если значение установлено\n    sex = localStorage.getItem('sex');\n} else {\n    sex = 'female'; //если значение отсутствует назначаем по умолчанию\n    localStorage.setItem('sex', 'female');\n}\n\nif (localStorage.getItem('ratio')) {\n    ratio = localStorage.getItem('ratio');\n} else {\n    ratio = 1.375;\n    localStorage.setItem('ratio', 1.375);\n}\n\nconst totalCalories = document.querySelector('.calculating__result span');\n\n//функция для установки класса активности на основе состояния localStorage\nfunction localStorageClassActiveAdd(parent, activeClass){\n    let elements = document.querySelectorAll(parent);\n\n    elements.forEach(item => {\n        item.classList.remove(activeClass);\n        if(item.getAttribute('id') === localStorage.getItem('sex')){\n            item.classList.add(activeClass);\n        }\n\n        if(item.getAttribute('data-ratio') === localStorage.getItem('ratio')){\n            item.classList.add(activeClass);\n            console.log(`my item ${item}`)\n        }\n    })\n}\n\nlocalStorageClassActiveAdd(\"#gender div\",\"calculating__choose-item_active\");\nlocalStorageClassActiveAdd('.calculating__choose_big div',\"calculating__choose-item_active\");\n\n//основная функция для расчета\nfunction calcTotal(height, weight, age) {\n    let resultCalories;\n    //если одного из введенных значений нет, устанавливаем totalCalories\n    if (!height || !weight || !age) {\n        totalCalories.innerText = '___';\n        return; // способ сразу завершить функцию\n    }\n\n    if (sex === 'male') {\n        resultCalories = ((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio).toFixed(0);\n        totalCalories.innerText = resultCalories;\n    } else if (sex === 'female') {\n        resultCalories = ((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio).toFixed(0);\n        totalCalories.innerText = resultCalories;\n    }\n    if (Number.isNaN(+resultCalories)){\n        totalCalories.innerText = 'Ошибка';\n    }\n}\ncalcTotal(height, weight, age, sex, ratio);\n\n// функция для получения информации из кнопок калькулятора\nfunction getStaticInformation(parentSelector, classActive) {\n    const elements = document.querySelectorAll(`${parentSelector} div`);\n    document.querySelector(parentSelector).addEventListener('click', (e) => {\n        if (e.target.getAttribute(\"data-ratio\")) {\n            ratio = e.target.getAttribute(\"data-ratio\"); \n            localStorage.setItem('ratio', e.target.getAttribute(\"data-ratio\")); //метод .setItem() пинимает два аргумента, ключ значение\n            calcTotal(height, weight, age, sex, ratio);\n\n            elements.forEach(item => {\n                item.classList.remove(classActive);\n            })\n            e.target.classList.add(classActive);\n\n            calcTotal(height, weight, age, sex, ratio);\n\n        } else if (e.target.getAttribute('id') === 'male' || e.target.getAttribute('id') === 'female') {\n            sex = e.target.getAttribute('id');\n            e.target.classList.add(classActive);\n            localStorage.setItem('sex', e.target.getAttribute('id'))\n\n            elements.forEach(item => {\n                item.classList.remove(classActive);\n            })\n            e.target.classList.add(classActive);\n\n            calcTotal(height, weight, age, sex, ratio);\n        }\n    })\n}\n\ngetStaticInformation(\"#gender\", \"calculating__choose-item_active\");\ngetStaticInformation('.calculating__choose_big', \"calculating__choose-item_active\");\n\n//функция для получения информации из полей input\nfunction getDinamicInformation() {\n    const dinamicField = document.querySelector('.calculating__choose_medium');\n    const dinamicFieldChild = dinamicField.querySelectorAll('.calculating__choose-item');\n\n    dinamicFieldChild.forEach(item => {\n        item.addEventListener('input', (e) => {\n            if (e.target.value.match(/\\D/g)) { // устанавливаем проверку для введенных значений. если ввели не цифру, добавляем красный border\n                e.target.style.border = '1px solid red';\n                totalCalories.innerText = '___';\n            } else {\n                e.target.style.border = 'none'\n            }\n\n            if (e.target.getAttribute('id') === 'height') {// значение input можно получить из свойства value\n                height = e.target.value;\n            } else if (e.target.getAttribute('id') === 'weight') {\n                weight = e.target.value;\n            } else if (e.target.getAttribute('id') === 'age') {\n                age = e.target.value;\n            }\n            calcTotal(height, weight, age, sex, ratio);\n        })\n    })\n}\ngetDinamicInformation();\n\n\n}\nexport default calc;","import { getResource } from \"../services/services\";\n\nfunction cards(){\n     // класс\n    const menu = document.querySelector('.menu'),\n        menuCards = menu.querySelector('.container');\n\n    class ClassTest {\n        constructor(imgSource, alt, title, description, price) { //проектируем объект с заданными аргументами\n            this.imgSource = imgSource;\n            this.alt = alt;\n            this.title = title;\n            this.description = description;\n            this.price = price;\n        }\n        renderCard() { // создаем метод render, который будет созадвать карточки на основе принятых аргументов\n            const div = document.createElement('div'); // 1. создаем блок \n            // 2. добавляем в блок html элемент\n            div.innerHTML = ` \n                            <div class=\"menu__item\">\n                                <img src=${this.imgSource} alt=${this.alt}>\n                                <h3 class=\"menu__item-subtitle\">${this.title}</h3>\n                                <div class=\"menu__item-descr\">${this.description}</div>\n                                <div class=\"menu__item-divider\"></div>\n                                <div class=\"menu__item-price\">\n                                    <div class=\"menu__item-cost\">Цена:</div>\n                                    <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\n                                </div>\n                            </div>\n                            `;\n            menuCards.append(div); // 3. добавляем сформированный блок в обертку для карточек\n        }\n    }\n\n    getResource('http://localhost:3000/menu') // для формирования карточек получаем ответ от сервера.\n                                            // Ответ приходит в виде promise. обрабатываем его через then\n        .then(data => {// data приходит в виде массива из 3 объектов\n            data.forEach(({ img, altimg, title, descr, price }) => { //перебираем элементы data с помощью класса ClassTest\n                new ClassTest(img, altimg, title, descr, price).renderCard()\n            })\n        });\n}\n\nexport default cards;","import { modalClose, modalOpen } from \"./modals\";\nimport { postData } from \"../services/services\";\n\nfunction forms(formSelector, modalSelector){\n     // forms\n     const forms = document.querySelectorAll(formSelector); // находим элементы форм. на странице их две\n\n     forms.forEach(item => {\n         postDataForm(item) //перебираем формы с помощью функции, которая включает в себя запрос на сервер\n     })\n     //объект с ответами на запрос\n     const message = {\n         loading: 'img/form/spinner.svg',\n         sucsess: 'Спасибо мы с вами свяжемся',\n         failure: 'Что-то пошло не так'\n     }\n\n     function postDataForm(form) {\n         form.addEventListener('submit', (e) => {\n             e.preventDefault();  //обнуляем настройки формы, для того чтобы не происходила перезагрузка страницы\n            \n             //формируем индикатор загрузки запроса\n             const statusMessage = document.createElement('img');\n             statusMessage.src = message.loading;\n             statusMessage.style.cssText = 'margin: 0 auto; display: block;'\n             statusMessage.textContent = message.loading;\n             form.insertAdjacentElement('afterend', statusMessage);\n \n             const formData = new FormData(form); //специальный объект FormData принимает в себя значение из формы. Т.к. из этого объекта нельзя просто так достать данные, парсим его в следующей строке\n             const json = JSON.stringify(Object.fromEntries(formData.entries()));\n            // метод .entries() разбивает объект на массив, состоящий из массивов [key, value]\n            //метод глобального объекта .fromEntries делает обратную операцию\n            // в конце превращаем полученный обьект в json \n \n             postData('http://localhost:3000/requests', json)\n                 .then((data) => {\n                     console.log(data);\n                     showThanksModal(message.sucsess);\n                 })\n                 .catch((data) => {\n                     console.log(data)\n                     showThanksModal(message.failure);\n                 })\n                 .finally(() => {\n                     form.reset();\n                     statusMessage.remove();\n                 })\n \n             //     request.addEventListener('load', ()=>{\n             //         if(request.status === 200){\n             //             console.log(request.response);\n             //             showThanksModal(message.sucsess);\n             //             form.reset();\n             //             statusMessage.remove();\n             //         }else{\n             //             showThanksModal(message.failure);\n             //             form.reset();\n             //             statusMessage.remove();\n             //         }\n             //     })\n             // })\n         })\n \n         // создаем функцию для создания/оповещения пользователя об отправке запроса\n         function showThanksModal(message) {\n             // получаем modal__dialog  и скрываем его\n             const prevModalDialog = document.querySelector('.modal__dialog'),\n                   modal = document.querySelector(modalSelector);\n             prevModalDialog.classList.add('hidden');\n\n             // создаем окно с сообщением и присваиваем ему класс modal__dialog лдя того чтобы применились старые стили\n             const thanksModal = document.createElement('div');\n             thanksModal.classList.add('modal__dialog');\n             thanksModal.innerHTML = `\n                                        <div class='modal__content'>\n                                            <div class='modal__close' data-modal-close>×</div>\n                                            <div class='modal__title'>${message}</div>\n                                        </div>\n                                    `;\n             document.querySelector('.modal').append(thanksModal);\n             \n             const modalSetTimeOutId = setTimeout(() => {\n                 thanksModal.remove()\n                 prevModalDialog.classList.remove('hidden');\n                 modalClose('.modal');\n             }, 4000);\n\n             modal.addEventListener('click', (e) => {\n                if (e.target === modal || e.target.getAttribute('data-modal-close') == '') {\n                    thanksModal.remove()\n                    prevModalDialog.classList.remove('hidden');\n                    modalClose('.modal');            \n                    clearTimeout(modalSetTimeOutId);\n                }\n            })\n         }\n     }\n}\nexport default forms;","//вынесли функции открытия/закрытия наверх т.к. есть зависимость с модулем forms\nfunction modalClose(modalSelector) {\n    const modal = document.querySelector(modalSelector);\n\n    modal.classList.remove('show')\n}\n\nfunction modalOpen(modalSelector, modalTimerId) {\n    const  modal = document.querySelector(modalSelector);\n    modal.classList.add('show');\n    //обнуляем вызов модального окна через таймер\n    if(modalTimerId){\n        clearInterval(modalTimerId);\n    }\n};\n\nfunction modals (modalTrigger, modalSelector, modalTimerId){\n        // модальное окно\n        const modal = document.querySelector(modalSelector),\n              btnTrigger = document.querySelectorAll(modalTrigger);\n    // закрытие модального окна через крестик\n    btnTrigger.forEach(btn => {\n        btn.addEventListener('click', () => {\n            modalOpen(modalSelector, modalTimerId);\n            clearTimeout(modalTimerId);\n        });\n    });\n    //закрытие модального окна через клик по подложке\n    modal.addEventListener('click', (e) => {\n        if (e.target === modal || e.target.getAttribute('data-modal-close') == '') {\n            modalClose(modalSelector);\n        }\n    })\n    //закрытие модального окна через esc\n    document.addEventListener('keydown', (e) => {\n        if (e.code === 'Escape' && modal.classList.contains('show')) {\n            modalClose(modalSelector);\n        }\n    })\n    // вызов модального окна через скролл\n    // для очистки ожидания события, создали отдельную функцию. в этой же функции и обнулили ожидание события\n    function showModalByScroll() {\n        if (window.scrollY + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\n            modalOpen(modalSelector, modalTimerId);\n            removeEventListener('scroll', showModalByScroll) \n        }\n    };\n    window.addEventListener('scroll',showModalByScroll);\n}\n\nexport default modals;\nexport {modalClose};\nexport {modalOpen};","function sliders({\n    container, \n    slide,\n    nextArrow,\n    prevArrow,\n    totalCounter,\n    currentCounter,\n    wrapper,\n    field \n    }){\n    // slider\n    let offset = 0;\n    let slideIndex = 1;\n    const slides = document.querySelectorAll(slide), //псевдомассив со слайдами\n        sliderParent = document.querySelector(container), //родительский блок\n        counter = sliderParent.querySelector(currentCounter), //счетчик\n        total = sliderParent.querySelector(totalCounter), //счетчик общего количества слайдов\n        minus = sliderParent.querySelector(prevArrow),\n        plus = sliderParent.querySelector(nextArrow),\n        slidesField = document.querySelector(wrapper), //поле содержащее все слайды\n        slidesWrapper = document.querySelector(field), // обертка/родитель через которая видно активный слайд\n        width = window.getComputedStyle(slidesWrapper).width; //получаем computed style для обертки слайдов\n\n    slidesField.style.width = 100 * slides.length + '%'; // устанавливаем ширину для поля со слайдами\n    slidesField.style.display = 'flex';\n    slidesField.style.transition = '0.5s all';\n\n    slidesWrapper.style.overflow = 'hidden'; //все что находится вне обертки, будет скрыто\n    slides.forEach(slide => {\n        slide.style.width = width;  // указывает фиксированную ширину для каждого слайда\n    })\n\n    counter.textContent = `0${slideIndex}`; // устанавливаем начальные значения счетчика и проводим проверку\n    if (slides.length < 10) {\n        total.textContent = `0${slides.length}`;\n    } else {\n        total.textContent = slides.length;\n    };\n\n    function counterPlus(n) { //функция для изменения счетчика \n        slideIndex = slideIndex + n;\n        if (slideIndex < 1) {\n            slideIndex = slides.length;\n        } else if (slideIndex > slides.length) {\n            slideIndex = 1;\n        }\n        if (slideIndex < 10) {\n            counter.innerText = `0${slideIndex}`;\n        } else if (slideIndex >= 10) {\n            counter.innerText = slideIndex;\n        }\n    }\n    plus.addEventListener('click', () => { // пролистывание слайдера через отступы\n        if (offset == +width.replace(/\\D/g, '') * (slides.length - 1)) {//если отступ имеет максимально допустимое значение, обнуляем\n            offset = 0;\n        } else {\n            offset += +width.replace(/\\D/g, ''); // в противном случае, увеличиваем отступ. с увеличением отступа будет сдвигаться слайдер\n        }\n        slidesField.style.transform = `translateX(-${offset}px)`;//применяем изменение отступа через полученное значение offset\n        counterPlus(1);\n        slidesActiveStatus(dotArray);\n    })\n    minus.addEventListener('click', () => {\n        if (offset == 0) {\n            offset = +width.replace(/\\D/g, '') * (slides.length - 1);\n        } else {\n            offset -= +width.replace(/\\D/g, '');\n        };\n        slidesField.style.transform = `translateX(-${offset}px)`;\n        counterPlus(-1);\n        slidesActiveStatus(dotArray);\n    })\n\n    // counter.textContent = `0${slideIndex}`;\n    // if (slides.length < 10) {\n    //     total.textContent = `0${slides.length}`;\n    // } else {\n    //     total.textContent = slides.length;\n    // };\n    // showSlides(slideIndex);\n\n    // function showSlides(n){\n    //     if(n > slides.length){\n    //          slideIndex = 1;\n    //     }\n    //     if(n < 1){\n    //         slideIndex = slides.length;\n    //     }\n\n    //     slides.forEach(slide =>{\n    //         slide.classList.add('hidden')\n    //     })\n    //     slides[slideIndex-1].classList.remove('hidden');\n    //     if (slides.length < 10) {\n    //         current.textContent =  `0${slideIndex}`;\n    //     } else {\n    //         current.textContent =  slideIndex;\n    //     }\n    // }\n\n    // function plusSlides (n) {\n    //     showSlides(slideIndex += n);\n    // }\n    // minus.addEventListener('click',()=>{\n    //     plusSlides(-1)\n    // })\n    // plus.addEventListener('click', ()=>{\n    //     plusSlides(1);\n    // });\n\n    // if(slides.length < 10){\n    //     total.innerText = `0${slides.length}`\n    // }else if(slides.length > 10){\n    //     total.innerText = slides.length;\n    // }\n    // showSlides(1)\n\n\n    // мой вариант\n    // function showSlides(n){\n    //     // поверка для slideIndex\n    //     if(slideIndex > slides.length){\n    //         slideIndex = 1;\n    //     }else if(slideIndex < 1){\n    //         slideIndex = slides.length;\n    //     }\n    //     //переключаем слайды\n    //     slides.forEach(slide=>{\n    //         slide.classList.add('hidden');\n    //     });\n    //     slides[slideIndex - 1].classList.remove('hidden');\n    //     //переключаем счетчик\n    //     if(n < 10){\n    //         counter.innerText = `0${slideIndex}`\n    //     }else(\n    //         counter.innerText = slideIndex\n    //     )\n\n    // }\n\n    // plus.addEventListener('click',()=>{\n    //     slideIndex+=1;\n    //     showSlides(slideIndex)\n    // });\n    // minus.addEventListener('click',()=>{\n    //     slideIndex-=1;\n    //     showSlides(slideIndex)\n    // })\n\n\n    // навигация для слайдера\n    slidesWrapper.style.position = 'relative';\n\n    //для точек навигации создаем обертку в виде списка\n    const dotWrapper = document.createElement('ul'),\n        dotArray = [];\n\n    dotWrapper.classList.add('carousel-indicators');\n    //перебираем массив со слайдами и на каждый слайд создаем точку навигации и пушим ее в массив\n    for (let i = 0; i < slides.length; i++) {\n        const dot = document.createElement('ul');\n        dot.classList.add('dot');\n        dot.setAttribute('slideNumber', i + 1);\n        dotArray.push(dot);\n        dotWrapper.append(dot);\n    };\n\n    slidesWrapper.append(dotWrapper);\n    \n    // функция отслеживания активности слайда\n    function slidesActiveStatus(arr) {\n        arr.forEach(slide => {\n            slide.style.opacity = '0.5';\n        });\n        arr[slideIndex - 1].style.opacity = '1';\n    };\n\n    slidesActiveStatus(dotArray);\n\n    //функция обработчик событий для навигации слайдера\n    function slidesClick(arr) {\n        arr.forEach(slide => {\n            slide.addEventListener('click', (e) => {\n                const slideNumber = slide.getAttribute('slideNumber');\n                slideIndex = slideNumber;\n                offset = +width.replace(/\\D/g, '') * (slideNumber - 1);\n                slidesField.style.transform = `translateX(-${offset}px)`;\n                slidesActiveStatus(dotArray);\n                if (slideIndex < 10) {\n                    counter.innerText = `0${slideIndex}`;\n                } else if (slideIndex >= 10) {\n                    counter.innerText = slideIndex;\n\n                }\n            })\n        })\n    };\n    slidesClick(dotArray);\n}\n\nexport default sliders;","\n\nfunction tabs (tabsSelector, tabsContentselector, tabsParentSelector, activeClass){\n    const tabHeaderItem = document.querySelectorAll(tabsSelector),\n          tabContent = document.querySelectorAll(tabsContentselector),\n          tabHeaderItems = document.querySelector(tabsParentSelector);\n          console.log(`tabheaderItem ${tabHeaderItem}`)\n          console.log(`tabContent${tabContent}`)\n          console.log(`tabHeaderItems$${tabHeaderItems}`)\nfunction tabContentHidden() {\n    tabContent.forEach((item) => {\n        item.classList.add('hidden');\n    })\n}\nfunction tabContentHiddenRemove(i = 0) {\n    tabContent[i].classList.remove('hidden');\n}\nfunction tabContentShow(i) {\n    tabContent.forEach(item => {\n        item.classList.remove('show');\n    })\n    tabContent[i].classList.add('show');\n}\ntabContentHidden();\ntabContentHiddenRemove();\n\ntabHeaderItems.addEventListener('click', (event) => {\n    console.log('tabs click')\n    if (event.target.className == tabsSelector.slice(1)) {\n        tabHeaderItem.forEach((item) => {\n            item.classList.remove(activeClass)\n            tabContentHidden();\n        });\n        event.target.classList.add(activeClass);\n\n    }\n    tabHeaderItem.forEach((item, i) => {\n        if (item.classList.contains(activeClass)) {\n            tabContentHiddenRemove(i);\n        }\n    })\n})\n}\nexport default tabs;","function timer (selector , deadline){\n       // timer////////////\n    //    let endTime = new Date(2023, 11, 9, 21, 35)\n    //    let nowTime = new Date();\n       // функция получения остатка времени.возвращает обьект данных\n       function getLeftTime(endTime) {\n           \n            const leftTimeParse = Date.parse(endTime) - Date.parse(new Date),\n               day = Math.floor(leftTimeParse / (24 * 60 * 60 * 1000)),\n               hours = Math.floor((leftTimeParse / (1000 * 60 * 60) % 24)),\n               minute = Math.floor((leftTimeParse / (1000 * 60)) % 60),\n               second = Math.floor((leftTimeParse / 1000) % 60);\n           return {\n               day: day,\n               hours: hours,\n               minute: minute,\n               second: second,\n               leftTimeParse: leftTimeParse,\n           }\n       }\n   \n       // 1. получаем элементы из документа \n   \n       function setLeftTime(selector, deadline) {\n\n           let timer = document.querySelector(selector),\n               days = timer.querySelector('#days'),\n               hours = timer.querySelector('#hours'),\n               minutes = timer.querySelector('#minutes'),\n               seconds = timer.querySelector('#seconds'),\n               // 2 таймаут для обновления таймера\n               setTimeOut = setInterval(updateClock, 1000);\n   \n           function updateClock() {\n               let leftTimeObj = getLeftTime(deadline);\n               days.innerHTML = leftTimeObj.day;\n               hours.innerHTML = leftTimeObj.hours;\n               minutes.innerHTML = leftTimeObj.minute;\n               seconds.innerHTML = leftTimeObj.second;\n               //  3 проверка для сброса таймера\n               if (leftTimeObj.leftTimeParse <= 0) {\n                   clearInterval(setTimeOut);\n               }\n           };\n       }\n\n       setLeftTime(selector, deadline)\n}\nexport default timer;","const postData = async (url, data) => {\n    const res = await fetch(url, {\n        method: 'POST',\n        headers: {\n            'Content-type': 'application/json'\n        },\n        body: data\n    });\n    return await res.json();\n}\n\nconst getResource = async (url) => {\n    const response = await fetch(url);\n    if (!response.ok) {\n        throw new Error(`Could not fetch ${url}, status ${response.status}`)\n    }\n    return response.json();\n}\n\nexport {postData};\nexport {getResource};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import calc from './modules/calc';\nimport cards from './modules/cards';\nimport forms from './modules/forms';\nimport modals from './modules/modals';\nimport sliders from './modules/sliders';\nimport tabs from './modules/tabs';\nimport timer from './modules/timer';\nimport { modalOpen } from './modules/modals';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    // tab/////////\n    // вызов модального окна через таймаут\n    const modalTimerId = setTimeout(()=>modalOpen('.modal', modalTimerId), 3000);\n    calc();\n    cards();\n    forms('form', '.modal');\n    modals('[data-modal-trigger]','.modal', modalTimerId);\n    sliders({\n        container:'.offer__slider',\n        slide : '.offer__slide',\n        nextArrow: '.offer__slider-next',\n        prevArrow: '.offer__slider-prev',\n        totalCounter: '#total',\n        currentCounter: '#current',\n        wrapper: '.offer__slider-inner', \n        field: '.offer__slider-wrapper'\n    });\n    tabs('.tabheader__item','.tabcontent', '.tabheader__items', 'tabheader__item_active');\n    timer('.timer', '2023-11-9');\n})\n\n"],"names":[],"sourceRoot":""}