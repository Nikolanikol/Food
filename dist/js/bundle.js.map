{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://food_dist/./js/modules/modals.js","webpack://food_dist/./js/main.js","webpack://food_dist/./js/modules/calc.js","webpack://food_dist/./js/modules/cards.js","webpack://food_dist/./js/modules/forms.js","webpack://food_dist/./js/services/services.js","webpack://food_dist/./js/modules/sliders.js","webpack://food_dist/./js/modules/tabs.js","webpack://food_dist/./js/modules/timer.js"],"sourcesContent":["//вынесли функции открытия/закрытия наверх т.к. есть зависимость с модулем forms\nfunction modalClose(modalSelector) {\n    const modal = document.querySelector(modalSelector);\n\n    modal.classList.remove('show')\n}\n\nfunction modalOpen(modalSelector, modalTimerId) {\n    const  modal = document.querySelector(modalSelector);\n    modal.classList.add('show');\n    //обнуляем вызов модального окна через таймер\n    if(modalTimerId){\n        clearInterval(modalTimerId);\n    }\n};\n\nfunction modals (modalTrigger, modalSelector, modalTimerId){\n        // модальное окно\n        const modal = document.querySelector(modalSelector),\n              btnTrigger = document.querySelectorAll(modalTrigger);\n    // закрытие модального окна через крестик\n    btnTrigger.forEach(btn => {\n        btn.addEventListener('click', () => {\n            modalOpen(modalSelector, modalTimerId);\n            clearTimeout(modalTimerId);\n        });\n    });\n    //закрытие модального окна через клик по подложке\n    modal.addEventListener('click', (e) => {\n        if (e.target === modal || e.target.getAttribute('data-modal-close') == '') {\n            modalClose(modalSelector);\n        }\n    })\n    //закрытие модального окна через esc\n    document.addEventListener('keydown', (e) => {\n        if (e.code === 'Escape' && modal.classList.contains('show')) {\n            modalClose(modalSelector);\n        }\n    })\n    // вызов модального окна через скролл\n    // для очистки ожидания события, создали отдельную функцию. в этой же функции и обнулили ожидание события\n    function showModalByScroll() {\n        if (window.scrollY + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\n            modalOpen(modalSelector, modalTimerId);\n            removeEventListener('scroll', showModalByScroll) \n        }\n    };\n    window.addEventListener('scroll',showModalByScroll);\n}\n\nexport default modals;\nexport {modalClose};\nexport {modalOpen};","import calc from './modules/calc';\nimport cards from './modules/cards';\nimport forms from './modules/forms';\nimport modals from './modules/modals';\nimport sliders from './modules/sliders';\nimport tabs from './modules/tabs';\nimport timer from './modules/timer';\nimport { modalOpen } from './modules/modals';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    // tab/////////\n    // вызов модального окна через таймаут\n    const modalTimerId = setTimeout(()=>modalOpen('.modal', modalTimerId), 3000);\n    calc();\n    cards();\n    forms('form', '.modal');\n    modals('[data-modal-trigger]','.modal', modalTimerId);\n    sliders({\n        container:'.offer__slider',\n        slide : '.offer__slide',\n        nextArrow: '.offer__slider-next',\n        prevArrow: '.offer__slider-prev',\n        totalCounter: '#total',\n        currentCounter: '#current',\n        wrapper: '.offer__slider-inner', \n        field: '.offer__slider-wrapper'\n    });\n    tabs('.tabheader__item','.tabcontent', '.tabheader__items', 'tabheader__item_active');\n    timer('.timer', '2023-11-9');\n})\n\n","function calc(){\n    // калькулятор\n\nlet height, weight, age, sex, ratio;\n\n// работа с localStorage дя сохранения состояния введенных данных\nif (localStorage.getItem('sex')) { //если значение установлено\n    sex = localStorage.getItem('sex');\n} else {\n    sex = 'female'; //если значение отсутствует назначаем по умолчанию\n    localStorage.setItem('sex', 'female');\n}\n\nif (localStorage.getItem('ratio')) {\n    ratio = localStorage.getItem('ratio');\n} else {\n    ratio = 1.375;\n    localStorage.setItem('ratio', 1.375);\n}\n\nconst totalCalories = document.querySelector('.calculating__result span');\n\n//функция для установки класса активности на основе состояния localStorage\nfunction localStorageClassActiveAdd(parent, activeClass){\n    let elements = document.querySelectorAll(parent);\n\n    elements.forEach(item => {\n        item.classList.remove(activeClass);\n        if(item.getAttribute('id') === localStorage.getItem('sex')){\n            item.classList.add(activeClass);\n        }\n\n        if(item.getAttribute('data-ratio') === localStorage.getItem('ratio')){\n            item.classList.add(activeClass);\n            console.log(`my item ${item}`)\n        }\n    })\n}\n\nlocalStorageClassActiveAdd(\"#gender div\",\"calculating__choose-item_active\");\nlocalStorageClassActiveAdd('.calculating__choose_big div',\"calculating__choose-item_active\");\n\n//основная функция для расчета\nfunction calcTotal(height, weight, age) {\n    let resultCalories;\n    //если одного из введенных значений нет, устанавливаем totalCalories\n    if (!height || !weight || !age) {\n        totalCalories.innerText = '___';\n        return; // способ сразу завершить функцию\n    }\n\n    if (sex === 'male') {\n        resultCalories = ((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio).toFixed(0);\n        totalCalories.innerText = resultCalories;\n    } else if (sex === 'female') {\n        resultCalories = ((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio).toFixed(0);\n        totalCalories.innerText = resultCalories;\n    }\n    if (Number.isNaN(+resultCalories)){\n        totalCalories.innerText = 'Ошибка';\n    }\n}\ncalcTotal(height, weight, age, sex, ratio);\n\n// функция для получения информации из кнопок калькулятора\nfunction getStaticInformation(parentSelector, classActive) {\n    const elements = document.querySelectorAll(`${parentSelector} div`);\n    document.querySelector(parentSelector).addEventListener('click', (e) => {\n        if (e.target.getAttribute(\"data-ratio\")) {\n            ratio = e.target.getAttribute(\"data-ratio\"); \n            localStorage.setItem('ratio', e.target.getAttribute(\"data-ratio\")); //метод .setItem() пинимает два аргумента, ключ значение\n            calcTotal(height, weight, age, sex, ratio);\n\n            elements.forEach(item => {\n                item.classList.remove(classActive);\n            })\n            e.target.classList.add(classActive);\n\n            calcTotal(height, weight, age, sex, ratio);\n\n        } else if (e.target.getAttribute('id') === 'male' || e.target.getAttribute('id') === 'female') {\n            sex = e.target.getAttribute('id');\n            e.target.classList.add(classActive);\n            localStorage.setItem('sex', e.target.getAttribute('id'))\n\n            elements.forEach(item => {\n                item.classList.remove(classActive);\n            })\n            e.target.classList.add(classActive);\n\n            calcTotal(height, weight, age, sex, ratio);\n        }\n    })\n}\n\ngetStaticInformation(\"#gender\", \"calculating__choose-item_active\");\ngetStaticInformation('.calculating__choose_big', \"calculating__choose-item_active\");\n\n//функция для получения информации из полей input\nfunction getDinamicInformation() {\n    const dinamicField = document.querySelector('.calculating__choose_medium');\n    const dinamicFieldChild = dinamicField.querySelectorAll('.calculating__choose-item');\n\n    dinamicFieldChild.forEach(item => {\n        item.addEventListener('input', (e) => {\n            if (e.target.value.match(/\\D/g)) { // устанавливаем проверку для введенных значений. если ввели не цифру, добавляем красный border\n                e.target.style.border = '1px solid red';\n                totalCalories.innerText = '___';\n            } else {\n                e.target.style.border = 'none'\n            }\n\n            if (e.target.getAttribute('id') === 'height') {// значение input можно получить из свойства value\n                height = e.target.value;\n            } else if (e.target.getAttribute('id') === 'weight') {\n                weight = e.target.value;\n            } else if (e.target.getAttribute('id') === 'age') {\n                age = e.target.value;\n            }\n            calcTotal(height, weight, age, sex, ratio);\n        })\n    })\n}\ngetDinamicInformation();\n\n\n}\nexport default calc;","import { getResource } from \"../services/services\";\n\nfunction cards(){\n     // класс\n    const menu = document.querySelector('.menu'),\n        menuCards = menu.querySelector('.container'),\n        menuArray =  [\n            {\n              \"img\": \"img/tabs/vegy.jpg\",\n              \"altimg\": \"vegy\",\n              \"title\": \"Меню 'Фитнес'\",\n              \"descr\": \"Меню 'Фитнес' - это новый подход к приготовлению блюд: больше свежих овощей и фруктов. Продукт активных и здоровых людей. Это абсолютно новый продукт с оптимальной ценой и высоким качеством!\",\n              \"price\": 9\n            },\n            {\n              \"img\": \"img/tabs/post.jpg\",\n              \"altimg\": \"post\",\n              \"title\": \"Меню 'Постное'\",\n              \"descr\": \"Меню 'Постное' - это тщательный подбор ингредиентов: полное отсутствие продуктов животного происхождения, молоко из миндаля, овса, кокоса или гречки, правильное количество белков за счет тофу и импортных вегетарианских стейков.\",\n              \"price\": 14\n            },\n            {\n              \"img\": \"img/tabs/elite.jpg\",\n              \"altimg\": \"elite\",\n              \"title\": \"Меню 'Премиум'\",\n              \"descr\": \"В меню 'Премиум' мы используем не только красивый дизайн упаковки, но и качественное исполнение блюд. Красная рыба, морепродукты, фрукты - ресторанное меню без похода в ресторан!\",\n              \"price\": 21\n            }\n          ];\n\n\n    class ClassTest {\n        constructor(imgSource, alt, title, description, price) { //проектируем объект с заданными аргументами\n            this.imgSource = imgSource;\n            this.alt = alt;\n            this.title = title;\n            this.description = description;\n            this.price = price;\n        }\n        renderCard() { // создаем метод render, который будет созадвать карточки на основе принятых аргументов\n            const div = document.createElement('div'); // 1. создаем блок \n            // 2. добавляем в блок html элемент\n            div.innerHTML = ` \n                            <div class=\"menu__item\">\n                                <img src=${this.imgSource} alt=${this.alt}>\n                                <h3 class=\"menu__item-subtitle\">${this.title}</h3>\n                                <div class=\"menu__item-descr\">${this.description}</div>\n                                <div class=\"menu__item-divider\"></div>\n                                <div class=\"menu__item-price\">\n                                    <div class=\"menu__item-cost\">Цена:</div>\n                                    <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\n                                </div>\n                            </div>\n                            `;\n            menuCards.append(div); // 3. добавляем сформированный блок в обертку для карточек\n        }\n    }\n    menuArray.forEach(({ img, altimg, title, descr, price })=>{\n        new ClassTest(img, altimg, title, descr, price).renderCard()\n    })\n\n    // getResource('http://localhost:3000/menu') // для формирования карточек получаем ответ от сервера.\n    //                                         // Ответ приходит в виде promise. обрабатываем его через then\n    //     .then(data => {// data приходит в виде массива из 3 объектов\n    //         data.forEach(({ img, altimg, title, descr, price }) => { //перебираем элементы data с помощью класса ClassTest\n    //             new ClassTest(img, altimg, title, descr, price).renderCard()\n    //         })\n    //     });\n}\n\nexport default cards;","import { modalClose, modalOpen } from \"./modals\";\nimport { postData } from \"../services/services\";\n\nfunction forms(formSelector, modalSelector){\n     // forms\n     const forms = document.querySelectorAll(formSelector); // находим элементы форм. на странице их две\n\n     forms.forEach(item => {\n         postDataForm(item) //перебираем формы с помощью функции, которая включает в себя запрос на сервер\n     })\n     //объект с ответами на запрос\n     const message = {\n         loading: 'img/form/spinner.svg',\n         sucsess: 'Спасибо мы с вами свяжемся',\n         failure: 'Что-то пошло не так'\n     }\n\n     function postDataForm(form) {\n         form.addEventListener('submit', (e) => {\n             e.preventDefault();  //обнуляем настройки формы, для того чтобы не происходила перезагрузка страницы\n            \n             //формируем индикатор загрузки запроса\n             const statusMessage = document.createElement('img');\n             statusMessage.src = message.loading;\n             statusMessage.style.cssText = 'margin: 0 auto; display: block;'\n             statusMessage.textContent = message.loading;\n             form.insertAdjacentElement('afterend', statusMessage);\n \n             const formData = new FormData(form); //специальный объект FormData принимает в себя значение из формы. Т.к. из этого объекта нельзя просто так достать данные, парсим его в следующей строке\n             const json = JSON.stringify(Object.fromEntries(formData.entries()));\n            // метод .entries() разбивает объект на массив, состоящий из массивов [key, value]\n            //метод глобального объекта .fromEntries делает обратную операцию\n            // в конце превращаем полученный обьект в json \n \n             postData('http://localhost:3000/requests', json)\n                 .then((data) => {\n                     console.log(data);\n                     showThanksModal(message.sucsess);\n                 })\n                 .catch((data) => {\n                     console.log(data)\n                     showThanksModal(message.failure);\n                 })\n                 .finally(() => {\n                     form.reset();\n                     statusMessage.remove();\n                 })\n \n             //     request.addEventListener('load', ()=>{\n             //         if(request.status === 200){\n             //             console.log(request.response);\n             //             showThanksModal(message.sucsess);\n             //             form.reset();\n             //             statusMessage.remove();\n             //         }else{\n             //             showThanksModal(message.failure);\n             //             form.reset();\n             //             statusMessage.remove();\n             //         }\n             //     })\n             // })\n         })\n \n         // создаем функцию для создания/оповещения пользователя об отправке запроса\n         function showThanksModal(message) {\n             // получаем modal__dialog  и скрываем его\n             const prevModalDialog = document.querySelector('.modal__dialog'),\n                   modal = document.querySelector(modalSelector);\n             prevModalDialog.classList.add('hidden');\n\n             // создаем окно с сообщением и присваиваем ему класс modal__dialog лдя того чтобы применились старые стили\n             const thanksModal = document.createElement('div');\n             thanksModal.classList.add('modal__dialog');\n             thanksModal.innerHTML = `\n                                        <div class='modal__content'>\n                                            <div class='modal__close' data-modal-close>×</div>\n                                            <div class='modal__title'>${message}</div>\n                                        </div>\n                                    `;\n             document.querySelector('.modal').append(thanksModal);\n             \n             const modalSetTimeOutId = setTimeout(() => {\n                 thanksModal.remove()\n                 prevModalDialog.classList.remove('hidden');\n                 modalClose('.modal');\n             }, 4000);\n\n             modal.addEventListener('click', (e) => {\n                if (e.target === modal || e.target.getAttribute('data-modal-close') == '') {\n                    thanksModal.remove()\n                    prevModalDialog.classList.remove('hidden');\n                    modalClose('.modal');            \n                    clearTimeout(modalSetTimeOutId);\n                }\n            })\n         }\n     }\n}\nexport default forms;","const postData = async (url, data) => {\n    const res = await fetch(url, {\n        method: 'POST',\n        headers: {\n            'Content-type': 'application/json'\n        },\n        body: data\n    });\n    return await res.json();\n}\n\nconst getResource = async (url) => {\n    const response = await fetch(url);\n    if (!response.ok) {\n        throw new Error(`Could not fetch ${url}, status ${response.status}`)\n    }\n    return response.json();\n}\n\nexport {postData};\nexport {getResource};","function sliders({\n    container, \n    slide,\n    nextArrow,\n    prevArrow,\n    totalCounter,\n    currentCounter,\n    wrapper,\n    field \n    }){\n    // slider\n    let offset = 0;\n    let slideIndex = 1;\n    const slides = document.querySelectorAll(slide), //псевдомассив со слайдами\n        sliderParent = document.querySelector(container), //родительский блок\n        counter = sliderParent.querySelector(currentCounter), //счетчик\n        total = sliderParent.querySelector(totalCounter), //счетчик общего количества слайдов\n        minus = sliderParent.querySelector(prevArrow),\n        plus = sliderParent.querySelector(nextArrow),\n        slidesField = document.querySelector(wrapper), //поле содержащее все слайды\n        slidesWrapper = document.querySelector(field), // обертка/родитель через которая видно активный слайд\n        width = window.getComputedStyle(slidesWrapper).width; //получаем computed style для обертки слайдов\n\n    slidesField.style.width = 100 * slides.length + '%'; // устанавливаем ширину для поля со слайдами\n    slidesField.style.display = 'flex';\n    slidesField.style.transition = '0.5s all';\n\n    slidesWrapper.style.overflow = 'hidden'; //все что находится вне обертки, будет скрыто\n    slides.forEach(slide => {\n        slide.style.width = width;  // указывает фиксированную ширину для каждого слайда\n    })\n\n    counter.textContent = `0${slideIndex}`; // устанавливаем начальные значения счетчика и проводим проверку\n    if (slides.length < 10) {\n        total.textContent = `0${slides.length}`;\n    } else {\n        total.textContent = slides.length;\n    };\n\n    function counterPlus(n) { //функция для изменения счетчика \n        slideIndex = slideIndex + n;\n        if (slideIndex < 1) {\n            slideIndex = slides.length;\n        } else if (slideIndex > slides.length) {\n            slideIndex = 1;\n        }\n        if (slideIndex < 10) {\n            counter.innerText = `0${slideIndex}`;\n        } else if (slideIndex >= 10) {\n            counter.innerText = slideIndex;\n        }\n    }\n    plus.addEventListener('click', () => { // пролистывание слайдера через отступы\n        if (offset == +width.replace(/\\D/g, '') * (slides.length - 1)) {//если отступ имеет максимально допустимое значение, обнуляем\n            offset = 0;\n        } else {\n            offset += +width.replace(/\\D/g, ''); // в противном случае, увеличиваем отступ. с увеличением отступа будет сдвигаться слайдер\n        }\n        slidesField.style.transform = `translateX(-${offset}px)`;//применяем изменение отступа через полученное значение offset\n        counterPlus(1);\n        slidesActiveStatus(dotArray);\n    })\n    minus.addEventListener('click', () => {\n        if (offset == 0) {\n            offset = +width.replace(/\\D/g, '') * (slides.length - 1);\n        } else {\n            offset -= +width.replace(/\\D/g, '');\n        };\n        slidesField.style.transform = `translateX(-${offset}px)`;\n        counterPlus(-1);\n        slidesActiveStatus(dotArray);\n    })\n\n    // counter.textContent = `0${slideIndex}`;\n    // if (slides.length < 10) {\n    //     total.textContent = `0${slides.length}`;\n    // } else {\n    //     total.textContent = slides.length;\n    // };\n    // showSlides(slideIndex);\n\n    // function showSlides(n){\n    //     if(n > slides.length){\n    //          slideIndex = 1;\n    //     }\n    //     if(n < 1){\n    //         slideIndex = slides.length;\n    //     }\n\n    //     slides.forEach(slide =>{\n    //         slide.classList.add('hidden')\n    //     })\n    //     slides[slideIndex-1].classList.remove('hidden');\n    //     if (slides.length < 10) {\n    //         current.textContent =  `0${slideIndex}`;\n    //     } else {\n    //         current.textContent =  slideIndex;\n    //     }\n    // }\n\n    // function plusSlides (n) {\n    //     showSlides(slideIndex += n);\n    // }\n    // minus.addEventListener('click',()=>{\n    //     plusSlides(-1)\n    // })\n    // plus.addEventListener('click', ()=>{\n    //     plusSlides(1);\n    // });\n\n    // if(slides.length < 10){\n    //     total.innerText = `0${slides.length}`\n    // }else if(slides.length > 10){\n    //     total.innerText = slides.length;\n    // }\n    // showSlides(1)\n\n\n    // мой вариант\n    // function showSlides(n){\n    //     // поверка для slideIndex\n    //     if(slideIndex > slides.length){\n    //         slideIndex = 1;\n    //     }else if(slideIndex < 1){\n    //         slideIndex = slides.length;\n    //     }\n    //     //переключаем слайды\n    //     slides.forEach(slide=>{\n    //         slide.classList.add('hidden');\n    //     });\n    //     slides[slideIndex - 1].classList.remove('hidden');\n    //     //переключаем счетчик\n    //     if(n < 10){\n    //         counter.innerText = `0${slideIndex}`\n    //     }else(\n    //         counter.innerText = slideIndex\n    //     )\n\n    // }\n\n    // plus.addEventListener('click',()=>{\n    //     slideIndex+=1;\n    //     showSlides(slideIndex)\n    // });\n    // minus.addEventListener('click',()=>{\n    //     slideIndex-=1;\n    //     showSlides(slideIndex)\n    // })\n\n\n    // навигация для слайдера\n    slidesWrapper.style.position = 'relative';\n\n    //для точек навигации создаем обертку в виде списка\n    const dotWrapper = document.createElement('ul'),\n        dotArray = [];\n\n    dotWrapper.classList.add('carousel-indicators');\n    //перебираем массив со слайдами и на каждый слайд создаем точку навигации и пушим ее в массив\n    for (let i = 0; i < slides.length; i++) {\n        const dot = document.createElement('ul');\n        dot.classList.add('dot');\n        dot.setAttribute('slideNumber', i + 1);\n        dotArray.push(dot);\n        dotWrapper.append(dot);\n    };\n\n    slidesWrapper.append(dotWrapper);\n    \n    // функция отслеживания активности слайда\n    function slidesActiveStatus(arr) {\n        arr.forEach(slide => {\n            slide.style.opacity = '0.5';\n        });\n        arr[slideIndex - 1].style.opacity = '1';\n    };\n\n    slidesActiveStatus(dotArray);\n\n    //функция обработчик событий для навигации слайдера\n    function slidesClick(arr) {\n        arr.forEach(slide => {\n            slide.addEventListener('click', (e) => {\n                const slideNumber = slide.getAttribute('slideNumber');\n                slideIndex = slideNumber;\n                offset = +width.replace(/\\D/g, '') * (slideNumber - 1);\n                slidesField.style.transform = `translateX(-${offset}px)`;\n                slidesActiveStatus(dotArray);\n                if (slideIndex < 10) {\n                    counter.innerText = `0${slideIndex}`;\n                } else if (slideIndex >= 10) {\n                    counter.innerText = slideIndex;\n\n                }\n            })\n        })\n    };\n    slidesClick(dotArray);\n}\n\nexport default sliders;","\n\nfunction tabs (tabsSelector, tabsContentselector, tabsParentSelector, activeClass){\n    const tabHeaderItem = document.querySelectorAll(tabsSelector),\n          tabContent = document.querySelectorAll(tabsContentselector),\n          tabHeaderItems = document.querySelector(tabsParentSelector);\n     \n\n    function tabContentHidden() {\n        tabContent.forEach((item) => {\n            item.classList.add('hidden');\n        })\n    }\n    //функция для отмены скрытия слайда. значение по умолчанию 0\n    function tabContentHiddenRemove(i = 0) {\n        tabContent[i].classList.remove('hidden');\n    }\n\n    function tabContentShow(i) {\n        tabContent.forEach(item => {\n            item.classList.remove('show');\n        })\n        tabContent[i].classList.add('show');\n    }\n    tabContentHidden();\n    tabContentHiddenRemove();\n\n    tabHeaderItems.addEventListener('click', (event) => {\n        if (event.target.className == tabsSelector.slice(1)) {\n            tabHeaderItem.forEach((item) => {\n                item.classList.remove(activeClass)\n                tabContentHidden();\n            });\n            event.target.classList.add(activeClass);\n        }\n        tabHeaderItem.forEach((item, i) => {\n            if (item.classList.contains(activeClass)) {\n                tabContentHiddenRemove(i);\n            }\n        })\n    })\n}\nexport default tabs;","function timer (selector , deadline){\n        function getLeftTime(endTime) {\n            //фиксит парсинг даты на IOS\n            function parseDate(dateStr) {\n                const [year, month, day] = dateStr.split('-').map(Number);\n                return new Date(year, month - 1, day);\n                }\n\n            // const leftTimeParse = Date.parse(endTime) - Date.parse(new Date),\n            const leftTimeParse = parseDate(endTime).getTime() - new Date().getTime();\n               day = Math.floor(leftTimeParse / (24 * 60 * 60 * 1000)),\n               hours = Math.floor((leftTimeParse / (1000 * 60 * 60) % 24)),\n               minute = Math.floor((leftTimeParse / (1000 * 60)) % 60),\n               second = Math.floor((leftTimeParse / 1000) % 60);\n           return {\n               day: day,\n               hours: hours,\n               minute: minute,\n               second: second,\n               leftTimeParse: leftTimeParse,\n           }\n       }\n       // 1. получаем элементы из документа \n       function setLeftTime(selector, deadline) {\n\n           let timer = document.querySelector(selector),\n               days = timer.querySelector('#days'),\n               hours = timer.querySelector('#hours'),\n               minutes = timer.querySelector('#minutes'),\n               seconds = timer.querySelector('#seconds'),\n               // 2 таймаут для обновления таймера\n               setTimeOut = setInterval(updateClock, 1000);\n   \n           function updateClock() {\n               let leftTimeObj = getLeftTime(deadline);\n               days.innerHTML = leftTimeObj.day;\n               hours.innerHTML = leftTimeObj.hours;\n               minutes.innerHTML = leftTimeObj.minute;\n               seconds.innerHTML = leftTimeObj.second;\n               //  3 проверка для сброса таймера\n               if (leftTimeObj.leftTimeParse <= 0) {\n                   clearInterval(setTimeOut);\n               }\n           };\n       }\n\n       setLeftTime(selector, deadline)\n}\nexport default timer;"],"names":["modalClose","modalSelector","document","querySelector","classList","remove","modalOpen","modalTimerId","add","clearInterval","addEventListener","setTimeout","height","weight","age","sex","ratio","localStorage","getItem","setItem","totalCalories","localStorageClassActiveAdd","parent","activeClass","querySelectorAll","forEach","item","getAttribute","console","log","calcTotal","resultCalories","toFixed","innerText","Number","isNaN","getStaticInformation","parentSelector","classActive","elements","e","target","value","match","style","border","menuCards","ClassTest","constructor","imgSource","alt","title","description","price","this","renderCard","div","createElement","innerHTML","append","img","altimg","descr","formSelector","form","showThanksModal","message","prevModalDialog","modal","thanksModal","modalSetTimeOutId","clearTimeout","preventDefault","statusMessage","src","loading","cssText","textContent","insertAdjacentElement","formData","FormData","async","url","data","res","fetch","method","headers","body","json","postData","JSON","stringify","Object","fromEntries","entries","then","sucsess","catch","failure","finally","reset","postDataForm","modalTrigger","btn","code","contains","window","showModalByScroll","scrollY","documentElement","clientHeight","scrollHeight","removeEventListener","container","slide","nextArrow","prevArrow","totalCounter","currentCounter","wrapper","field","offset","slideIndex","slides","sliderParent","counter","total","minus","plus","slidesField","slidesWrapper","width","getComputedStyle","counterPlus","n","length","display","transition","overflow","replace","transform","slidesActiveStatus","dotArray","position","dotWrapper","i","dot","setAttribute","push","arr","opacity","slideNumber","tabsSelector","tabsContentselector","tabsParentSelector","tabHeaderItem","tabContent","tabHeaderItems","tabContentHidden","tabContentHiddenRemove","event","className","slice","selector","deadline","getLeftTime","endTime","leftTimeParse","dateStr","year","month","day","split","map","Date","parseDate","getTime","Math","floor","hours","minute","second","timer","days","minutes","seconds","setTimeOut","setInterval","leftTimeObj","setLeftTime"],"sourceRoot":""}